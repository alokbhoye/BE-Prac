
pragma solidity ^0.8.18;


contract BankAccount {

    mapping(address => uint256) private balances;


    event Deposit(address indexed account, uint256 amount);
    

    event Withdraw(address indexed account, uint256 amount);


    function deposit(uint amount) public payable {
        require(amount > 0, "Deposit amount must be greater than zero.");
        balances[msg.sender] += amount;
        emit Deposit(msg.sender, amount);
    }


    function withdraw(uint256 amount) public {
        require(amount > 0, "Withdraw amount must be greater than zero.");
        require(balances[msg.sender] >= amount, "Insufficient balance.");

        balances[msg.sender] -= amount;
        

        payable(msg.sender).transfer(amount);

        emit Withdraw(msg.sender, amount);
    }


    function getBalance() public view returns (uint256) {
        return balances[msg.sender];
    }
}
